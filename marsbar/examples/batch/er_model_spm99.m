%------------------------------------------------------------------
% SPM99 batch mfile to configure analysis for 3 sessions of ER data
%------------------------------------------------------------------
%
% $Id: er_model_spm99.m,v 1.1.1.1 2004/08/14 00:07:52 matthewbrett Exp $ 

global SPM_BCH_VARS

sess_dir = SPM_BCH_VARS.sess_dir;
sesses = SPM_BCH_VARS.sesses;
nsessions = length(sesses);

TR = 2.02726;
condnames = {'vis_stim'};
nconds = length(condnames);
  
clear scannames scannos;
for ss = 1:nsessions
  fildir = fullfile(sess_dir, sesses{ss});
  % get scan names for the analysis
  files = spm_get('Files', fildir, 's*.img');
  scannos(ss) = size(files,1);
  scannames(ss) = {files};
  
  % Condition stuff - onset times for visual stimulus
  condir = fullfile(fildir, 'onsets');
  condfile = spm_get('Files', condir, 'flash*.txt');
  condons = spm_load(condfile);
  stimons = condons(:,2); % get stimulus column
  stimons(stimons < 0) = 0;  % correct negative onsets
  
  conditions(ss) = struct( ...
      'names', {condnames},...
      'onsets',{{stimons}},...
      'types',   {repmat({'events'},1,nconds)}, ... 
      'bf_ev',   [ones(1,nconds)], ...
      'bf_ep',   [0], ...
      'volterra',  0, ...
      'variable_dur', 0 ...
      );

end

%---------------------------------------------------------------
% batch variables defined here for analysis 'model'
%---------------------------------------------------------------
o = ones(1, nsessions);
model(1) = struct( ...
 'types',          4, ...
 'global_effects', {'None'}, ...
 'burst_mode',     0, ...
 'HF_fil',         'specify',  ...
 'HF_cut',         o * 60, ...
 'LF_fil',         'hrf', ...
 'LF_cut',         4, ...
 'int_corr',       'none', ... 
 'now_later',      0 , ...   % flag is 0 -> configure only
 'stop_writing',   0, ...
 'trial_fcon',     0, ...
 'RT',             TR, ...
 'replicated',     0, ...
 'nsess',          nsessions, ...
 'nscans',         scannos, ...
 'files',          {scannames}, ...
 'conditions_nb',  [ones(1,nsessions) * nconds], ...     
 'conditions',     [1:nsessions], ...
 'regressors_nb',  o * 0, ...
 'regressors',     [], ...
 'parametrics_type', {repmat({'none'},1,nsessions)}, ...
 'parametrics',    [], ...
 'stochastics_flag', [0], ...
 'stochastics',    [] ...
);

%-------------------------------------------

bf_ev(1) = struct( ...
  'ev_type', 2, ... %   2 <->  'hrf + temporal derivative',
  'win_len',[], ...
  'order',  [] ...  
);

